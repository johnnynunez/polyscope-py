name: Test Build

# NOTE: build logic is duplicated here and in publish.yml

# Run on the master branch commit push and PRs to master (note conditional below)
on:
  push:
    branches:    
      - master
  pull_request:
    branches:
      - master

jobs:
  build_wheels:

    # Only run if the commit message contains '[ci build]'
    if: "contains(toJSON(github.event.commits.*.message), '[ci build]') || contains(toJSON(github.event.pull_request.title), '[ci build]')"

    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_i686
          - runs-on: macos-latest
            cibw-arch: macosx_x86_64
          - runs-on: macos-latest
            cibw-arch: macosx_arm64
          - runs-on: macos-latest
            cibw-arch: macosx_universal2
          - runs-on: windows-latest
            cibw-arch: win_amd64
          - runs-on: windows-latest
            cibw-arch: win32
            python-arch: x86

    name: Build wheels ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    env:
      CIBW_BUILD_VERBOSITY: 3
      CIBW_BEFORE_BUILD_LINUX : "yum remove -y cmake && python -m pip install cmake && yum install -y libX11-devel libXcursor-devel libXrandr-devel libXinerama-devel mesa-libGL-devel mesa-libGL libXi-devel freeglut-devel mesa-libEGL-devel"
      CIBW_SKIP: "cp313-*" # skip python 13 for now, builds failing

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.21.3

      - name: Configure cibuildwheel
        shell: bash
        run: |
          CMAKE_ARCH="${{ matrix.cibw-arch == 'win32' && '-A Win32' || '' }}"
          CMAKE_OSX_ARCHITECTURES=${{ matrix.cibw-arch == 'macosx_x86_64' && 'x86_64' || matrix.cibw-arch == 'macosx_arm64' && 'arm64' || matrix.cibw-arch == 'macosx_universal2' && '"arm64;x86_64"' || '' }}
          echo "CIBW_ARCHS_MACOS=x86_64 arm64 universal2" >> $GITHUB_ENV
          echo "CIBW_BUILD=*-${{ matrix.cibw-arch }}" >> $GITHUB_ENV
          echo "CIBW_ENVIRONMENT_MACOS=CMAKE_OSX_ARCHITECTURES=\"$CMAKE_OSX_ARCHITECTURES\"" >> $GITHUB_ENV
      - name: Package source distribution
        if: runner.os == 'Linux'
        run: |
          python -m pip install build
          python -m build --sdist --wheel-dir=wheelhouse

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      
      # Upload binaries to the github artifact store
      - uses: actions/upload-artifact@v4.4.3
        with:
          path: |
            ./wheelhouse/*.whl 
            ./wheelhouse/*.tar.gz 
